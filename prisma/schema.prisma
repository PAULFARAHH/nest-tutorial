// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username String @unique
  password String
  userId   Int    @id @default(autoincrement())
  token    String @unique
  role     String
}

// Define Departments model
model Departments {
  department_id Int       @id @default(autoincrement())
  name          String
  doctors       Doctors[]
}

// Define Doctors model
model Doctors {
  doctor_id     Int        @id @default(autoincrement())
  name          String
  department_id Int
  patients      Patients[]

  department Departments @relation(fields: [department_id], references: [department_id])

  // Add opposite relation field for Appointments
  appointments Appointments[]
}

// Define Patients model
model Patients {
  patient_id Int    @id @default(autoincrement())
  name       String
  doctor_id  Int

  doctor Doctors @relation(fields: [doctor_id], references: [doctor_id])

  // Add opposite relation field for Appointments
  appointments Appointments[]
}

// Define Appointments model
model Appointments {
  appointment_id   Int      @id @default(autoincrement())
  doctor_id        Int
  patient_id       Int
  appointment_date DateTime
  appointment_time DateTime

  // Add opposite relation fields for Doctors and Patients
  doctor  Doctors  @relation(fields: [doctor_id], references: [doctor_id])
  patient Patients @relation(fields: [patient_id], references: [patient_id])
}
